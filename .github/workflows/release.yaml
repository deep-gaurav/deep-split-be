name: Production Release

on:
  push:
    branches:
      - 'prod'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  linux:
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          apt-get -y update
          apt-get -y install curl gcc pkg-config libssl-dev
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          profile: minimal

      - name: Fetch dependencies
        run: cargo fetch --locked

      - name: Build
        run: cargo build --release

      - uses: actions/upload-artifact@v3
        with:
          name: deepsplit_be
          path: |
            ./target/release/deepsplit_be
          retention-days: 1

  publish:
    if: github.event_name != 'pull_request'
    needs: [linux]
    runs-on: ubuntu-latest
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      # Must perform checkout first, since it deletes the target directory
      # before running, and would therefore delete the downloaded artifacts
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3          

      - name: envset
        run: |
          (echo 'SUBJECT=Deepsplit development build';
           echo 'TAG_NAME=prod') >> $GITHUB_ENV
          gh release delete prod --yes || true
          git push origin :prod || true


      - name: Publish release
        run: |
          gh release create $TAG_NAME $PRERELEASE --title "$TAG_NAME" --target $GITHUB_SHA deepsplit_be*/*